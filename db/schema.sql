-- MySQL Script generated by MySQL Workbench
-- Fri Mar  1 18:40:52 2024
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
-- -----------------------------------------------------
-- Schema capstone_scheduling_project
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `capstone_scheduling_project` ;

-- -----------------------------------------------------
-- Schema capstone_scheduling_project
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `capstone_scheduling_project` ;
USE `capstone_scheduling_project` ;

-- -----------------------------------------------------
-- Table `capstone_scheduling_project`.`professors`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `capstone_scheduling_project`.`professors` ;

CREATE TABLE IF NOT EXISTS `capstone_scheduling_project`.`professors` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(255) NOT NULL,
  `created_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updated_at` DATETIME NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `capstone_scheduling_project`.`time_blocks`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `capstone_scheduling_project`.`time_blocks` ;

CREATE TABLE IF NOT EXISTS `capstone_scheduling_project`.`time_blocks` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `identifier` VARCHAR(255) NOT NULL,
  `may_start` TINYINT NOT NULL,
  `block_type` INT NOT NULL,
  `day` INT NOT NULL,
  `timeslot` INT NOT NULL,
  `created_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updated_at` DATETIME NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`),
  UNIQUE INDEX (`day` ASC, `timeslot` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `capstone_scheduling_project`.`courses`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `capstone_scheduling_project`.`courses` ;

CREATE TABLE IF NOT EXISTS `capstone_scheduling_project`.`courses` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(255) NOT NULL,
  `identifier` VARCHAR(255) NOT NULL,
  `needs_lab` TINYINT NOT NULL,
  `course_size` INT NOT NULL,
  `level` INT NOT NULL,
  `double_block` TINYINT NOT NULL,
  `created_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updated_at` DATETIME NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `capstone_scheduling_project`.`classrooms`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `capstone_scheduling_project`.`classrooms` ;

CREATE TABLE IF NOT EXISTS `capstone_scheduling_project`.`classrooms` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `room` VARCHAR(255) NOT NULL,
  `is_lab` TINYINT NOT NULL,
  `room_capacity` INT NOT NULL,
  `created_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updated_at` DATETIME NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `capstone_scheduling_project`.`time_preferences`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `capstone_scheduling_project`.`time_preferences` ;

CREATE TABLE IF NOT EXISTS `capstone_scheduling_project`.`time_preferences` (
  `professor_id` INT NOT NULL,
  `time_block_id` INT NOT NULL,
  `priority` INT NOT NULL,
  `created_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updated_at` DATETIME NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`professor_id`, `time_block_id`),
  INDEX `fk_professor_has_time_block_time_block1_idx` (`time_block_id` ASC) VISIBLE,
  INDEX `fk_professor_has_time_block_professor_idx` (`professor_id` ASC) VISIBLE,
  CONSTRAINT `fk_professor_has_time_block_professor`
    FOREIGN KEY (`professor_id`)
    REFERENCES `capstone_scheduling_project`.`professors` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_professor_has_time_block_time_block1`
    FOREIGN KEY (`time_block_id`)
    REFERENCES `capstone_scheduling_project`.`time_blocks` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `capstone_scheduling_project`.`course_preferences`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `capstone_scheduling_project`.`course_preferences` ;

CREATE TABLE IF NOT EXISTS `capstone_scheduling_project`.`course_preferences` (
  `professor_id` INT NOT NULL,
  `course_id` INT NOT NULL,
  `priority` INT NOT NULL,
  `created_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updated_at` DATETIME NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`professor_id`, `course_id`),
  INDEX `fk_professor_has_class_class1_idx` (`course_id` ASC) VISIBLE,
  INDEX `fk_professor_has_class_professor1_idx` (`professor_id` ASC) VISIBLE,
  CONSTRAINT `fk_professor_has_class_professor1`
    FOREIGN KEY (`professor_id`)
    REFERENCES `capstone_scheduling_project`.`professors` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_professor_has_class_class1`
    FOREIGN KEY (`course_id`)
    REFERENCES `capstone_scheduling_project`.`courses` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `capstone_scheduling_project`.`sections`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `capstone_scheduling_project`.`sections` ;

CREATE TABLE IF NOT EXISTS `capstone_scheduling_project`.`sections` (
  `course_id` INT NOT NULL,
  `section_num` INT NOT NULL,
  `professor_id` INT NOT NULL,
  `start` INT NOT NULL,
  `end` INT NOT NULL,
  `classroom_id` INT NOT NULL,
  `created_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updated_at` DATETIME NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  INDEX `fk_professor_has_time_block1_time_block1_idx` (`start` ASC) VISIBLE,
  INDEX `fk_professor_has_time_block1_professor1_idx` (`professor_id` ASC) VISIBLE,
  INDEX `fk_professor_has_time_block1_class1_idx` (`course_id` ASC) VISIBLE,
  INDEX `fk_professor_has_time_block1_classroom1_idx` (`classroom_id` ASC) VISIBLE,
  PRIMARY KEY (`course_id`, `section_num`),
  UNIQUE INDEX (`start` ASC, `classroom_id` ASC) VISIBLE,
  UNIQUE INDEX (`professor_id` ASC, `start` ASC) VISIBLE,
  INDEX `fk_sections_time_blocks1_idx` (`end` ASC) VISIBLE,
  CONSTRAINT `fk_professor_has_time_block1_professor1`
    FOREIGN KEY (`professor_id`)
    REFERENCES `capstone_scheduling_project`.`professors` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_professor_has_time_block1_time_block1`
    FOREIGN KEY (`start`)
    REFERENCES `capstone_scheduling_project`.`time_blocks` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_professor_has_time_block1_class1`
    FOREIGN KEY (`course_id`)
    REFERENCES `capstone_scheduling_project`.`courses` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_professor_has_time_block1_classroom1`
    FOREIGN KEY (`classroom_id`)
    REFERENCES `capstone_scheduling_project`.`classrooms` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_sections_time_blocks1`
    FOREIGN KEY (`end`)
    REFERENCES `capstone_scheduling_project`.`time_blocks` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
